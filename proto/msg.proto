syntax = "proto3";
package im;


message MessageSend {
    int64 tempId = 1; //临时id
    string from = 2; //发送者
    string to = 3; //接收者 如果type=1是单聊时，接收者是uid 如果是群聊或聊天室时 接收者是对应的id
    string content = 4; //消息体
    int32 type = 5; //1-单聊 2-群聊 3-聊天室
}
message MessageSendAck {
    int64 tempId = 1; //客户端主动发送消息时的临时id
    int64 msgId = 2; //后端生成的消息id
    int64 timestamp = 3; //后端接收到消息的时间戳
}
message MessageNotify {
    int64 msgId = 1;
    string from = 2; //发送者
    string to = 3; //接收者 如果type=1是单聊时，接收者是uid 如果是群聊或聊天室时 接收者是对应的id
    string content = 4; //消息体
    int32 type = 5; //1-单聊 2-群聊 3-聊天室
    int64 timestamp = 6; //消息的时间戳
    int32 seq = 7;
}
message Notify {
    int64 msgId = 1;
    int32 type = 2; //通知类型  1-推送
    int64 timestamp = 3; //消息的时间戳
    int32 seq = 4;
}
//消息下发的ack
message NotifyAck {
    int64 msgId = 1;
}
message AuthReq {
    string token = 1;
    string uid = 2;
}
message AuthRes {
    int32 code = 1; //200-成功  500-失败
    string msg = 2; //如果失败，提示失败原因
}
message LogoutReq {
    string token = 1;
    string uid = 2;
}
message LogoutRes {
    int32 code = 1; //200-成功  500-失败
    string msg = 2; //如果失败，提示失败原因
}
message KickoutReq {
    string reason = 1; //踢出原因
}
message PullMsgReq {
    string uid = 1;
    int64 lastMsgId = 2; //当前客户端同步的最后一条消息
    int32 limit = 3; //条数限制
}

message PullMessageNotify {
    int64 msgId = 1;
    string from = 2; //发送者
    string to = 3; //接收者 如果type=1是单聊时，接收者是uid 如果是群聊或聊天室时 接收者是对应的id
    string content = 4; //消息体
    int32 type = 5; //1-单聊 2-群聊 3-聊天室
    int64 timestamp = 6; //消息的时间戳
}
message PullNotify {
    int64 msgId = 1;
    int32 type = 2; //通知类型  1-推送
    int64 timestamp = 3; //消息的时间戳
}
message PullMsgRes {
    int32 code = 3;
    string msg = 4;
    repeated PullMessageNotify message = 1; //聊天消息
    repeated PullNotify notifies = 2; //通知类消息
}